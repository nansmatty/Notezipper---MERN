{"version":3,"sources":["components/footer/Footer.js","constants/userConstants.js","actions/userActions.js","components/header/Header.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/notesContansts.js","actions/noteActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyNotes/MyNotes.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/Notes/CreateNote.js","screens/Notes/SingleNote.js","screens/ProfileScreen/ProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/userReducers.js","reducers/noteReducers.js","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","register","name","pic","Header","setSearch","history","useHistory","useDispatch","userInfo","useSelector","state","userLogin","Navbar","bg","variant","expand","Brand","href","fontFamily","fontWeight","fontSize","Toggle","Collapse","id","Nav","Form","inline","FormControl","placeholder","onChange","e","target","value","Link","NavDropdown","title","Item","onClick","removeItem","push","to","LandingPage","useEffect","getItem","Button","size","MainScreen","children","NOTE_LIST_REQUEST","NOTE_LIST_SUCCESS","NOTE_LIST_FAIL","NOTE_CREATE_REQUEST","NOTE_CREATE_SUCCESS","NOTE_CREATE_FAIL","NOTE_UPDATE_REQUEST","NOTE_UPDATE_SUCCESS","NOTE_UPDATE_FAIL","NOTE_DELETE_REQUEST","NOTE_DELETE_SUCCESS","NOTE_DELETE_FAIL","deleteNotes","getState","Authorization","token","delete","Loading","alignItems","height","Spinner","animation","ErrorMessage","Alert","MyNotes","search","noteList","loading","error","notes","successCreate","noteCreate","success","successUpdate","noteUpdate","noteDelete","loadingDelete","errorDelete","successDelete","get","marginLeft","marginBottom","reverse","filter","filteredNote","toLowerCase","includes","map","note","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","window","confirm","Body","Badge","category","content","createdAt","substring","LoginScreen","useState","setEmail","setPassword","submitHandler","preventDefault","onSubmit","Group","controlId","Label","Control","RegisterScreen","setName","setPic","confirmPassword","setConfirmPassword","picMessage","setPicMessage","setMessage","userRegister","File","pics","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","console","log","postDetails","files","label","custom","CreateNote","setTitle","setContent","setCategory","resetHandler","createNotes","rows","Date","toLocaleDateString","SingleNote","match","date","setDate","params","updatedAt","fetching","put","updateNotes","ProfileScreen","location","userUpdate","md","user","varient","src","alt","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"qTAuBeA,EArBA,WACb,OACE,wBACEC,MAAO,CACLC,MAAO,OACPC,SAAU,WACVC,OAAQ,EACRC,QAAS,OACTC,eAAgB,UANpB,SAQE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,UAAU,mBAAf,SACE,qE,4GCfCC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBCGnBC,EAAQ,SAACC,EAAOC,GAAR,8CAAqB,WAAOC,GAAP,mBAAAC,EAAA,sEAEtCD,EAAS,CAAEE,KAAMf,IAEXgB,EAAS,CACbC,QAAS,CACP,eAAgB,qBANkB,SAUfC,IAAMC,KAC3B,mBACA,CAAER,QAAOC,YACTI,GAboC,gBAU9BI,EAV8B,EAU9BA,KAMRP,EAAS,CAAEE,KAAMd,EAAoBoB,QAASD,IAE9CE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,IAlBV,kDAoBtCP,EAAS,CACPE,KAAMb,EACNmB,QACE,KAAIK,UAAY,KAAIA,SAASN,KAAKO,QAC9B,KAAID,SAASN,KAAKO,QAClB,KAAIA,UAzB0B,0DAArB,uDAgCRC,EAAW,SAACC,EAAMlB,EAAOC,EAAUkB,GAAxB,8CAAgC,WAAOjB,GAAP,mBAAAC,EAAA,sEAEpDD,EAAS,CAAEE,KAAMX,IAEXY,EAAS,CACbC,QAAS,CACP,eAAgB,qBANgC,SAU7BC,IAAMC,KAC3B,aACA,CAAEU,OAAMlB,QAAOC,WAAUkB,OACzBd,GAbkD,gBAU5CI,EAV4C,EAU5CA,KAMRP,EAAS,CAAEE,KAAMV,EAAuBgB,QAASD,IAEjDP,EAAS,CAAEE,KAAMd,EAAoBoB,QAASD,IAE9CE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,IApBI,kDAsBpDP,EAAS,CACPE,KAAMT,EACNe,QACE,KAAIK,UAAY,KAAIA,SAASN,KAAKO,QAC9B,KAAID,SAASN,KAAKO,QAClB,KAAIA,UA3BwC,0DAAhC,uDC2BTI,EA7DA,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACVC,EAAUC,cAEVrB,EAAWsB,cAGTC,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAOR,OACE,cAACI,EAAA,EAAD,CAAQC,GAAG,UAAUC,QAAQ,OAAOC,OAAO,KAA3C,SACE,eAAC/C,EAAA,EAAD,WACE,cAAC4C,EAAA,EAAOI,MAAR,CACEC,KAAK,IACLvD,MAAO,CACLwD,WAAY,4BACZC,WAAY,MACZC,SAAU,QALd,0BASA,cAACR,EAAA,EAAOS,OAAR,CAAe,gBAAc,qBAC7B,eAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,mBAApB,UACE,cAACC,EAAA,EAAD,CAAKrD,UAAU,SAAf,SACE,cAACsD,EAAA,EAAD,CAAMC,QAAM,EAAZ,SACE,cAACC,EAAA,EAAD,CACExC,KAAK,OACLyC,YAAY,SACZzD,UAAU,UACV0D,SAAU,SAACC,GAAD,OAAO1B,EAAU0B,EAAEC,OAAOC,cAKzCxB,EACC,eAACgB,EAAA,EAAD,WACE,cAACA,EAAA,EAAIS,KAAL,CAAUhB,KAAK,WAAf,sBACA,eAACiB,EAAA,EAAD,CAAaC,MAAK,OAAE3B,QAAF,IAAEA,OAAF,EAAEA,EAAUP,KAAMsB,GAAG,qBAAvC,UACE,cAACW,EAAA,EAAYE,KAAb,CAAkBnB,KAAK,WAAvB,wBACA,cAACiB,EAAA,EAAYE,KAAb,CAAkBC,QAnCV,WACpBpD,ED2DkB,uCAAM,WAAOA,GAAP,SAAAC,EAAA,sDAC1BQ,aAAa4C,WAAW,YACxBrD,EAAS,CAAEE,KAAMZ,IAFS,2CAAN,uDC1DlB8B,EAAQkC,KAAK,MAiCD,0BAMJ,cAACf,EAAA,EAAD,UACE,cAACA,EAAA,EAAIS,KAAL,UACE,cAAC,IAAD,CAAMO,GAAG,SAAT,gC,QCpBDC,G,OAtCK,SAAC,GAAiB,IAAfpC,EAAc,EAAdA,QAQrB,OAPAqC,qBAAU,WACShD,aAAaiD,QAAQ,aAEpCtC,EAAQkC,KAAK,cAEd,CAAClC,IAGF,qBAAKlC,UAAU,OAAf,SACE,cAACH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,sBAAKE,UAAU,aAAf,UACE,gCACE,oBAAIA,UAAU,QAAd,0BACA,mBAAGA,UAAU,WAAb,SACE,wEAGJ,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMqE,GAAG,SAAT,SACE,cAACI,EAAA,EAAD,CAAQC,KAAK,KAAK1E,UAAU,gBAA5B,qBAIF,cAAC,IAAD,CAAMqE,GAAG,YAAT,SACE,cAACI,EAAA,EAAD,CAAQC,KAAK,KAAK1E,UAAU,gBAA5B,oC,2BCRD2E,G,OApBI,SAAC,GAAyB,IAAvBX,EAAsB,EAAtBA,MAAOY,EAAe,EAAfA,SAC3B,OACE,qBAAK5E,UAAU,WAAf,SACE,cAACH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,sBAAKE,UAAU,OAAf,UACGgE,GACC,qCACE,oBAAIhE,UAAU,UAAd,SAAyBgE,IACzB,0BAGHY,aCfAC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAiB,iBAEjBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBC4HnBC,GAAc,SAACrC,GAAD,8CAAQ,WAAOtC,EAAU4E,GAAjB,qBAAA3E,EAAA,sEAE/BD,EAAS,CACPE,KAAMsE,IAHuB,EAQ3BI,IADWrD,EAPgB,EAO7BG,UAAaH,SAGTpB,EAAS,CACbC,QAAS,CACPyE,cAAc,UAAD,OAAYtD,EAASuD,SAZP,SAgBzBzE,IAAM0E,OAAN,qBAA2BzC,GAAMnC,GAhBR,OAkB/BH,EAAS,CAAEE,KAAMuE,KAlBc,gDAoBzB3D,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAMwE,GACNlE,QAASM,IA1BoB,yDAAR,yD,UCnHZkE,GArBC,SAAC,GAAoB,IAAD,IAAjBpB,YAAiB,MAAV,IAAU,EAClC,OACE,qBACEnF,MAAO,CACLI,QAAS,OACTC,eAAgB,SAChBmG,WAAY,SACZvG,MAAO,OACPwG,OAAQ,QANZ,SAQE,cAACC,GAAA,EAAD,CACE1G,MAAO,CACLC,MAAOkF,EACPsB,OAAQtB,GAEVwB,UAAU,c,UCPHC,GARM,SAAC,GAAoC,IAAD,IAAjCxD,eAAiC,MAAvB,OAAuB,EAAfiC,EAAe,EAAfA,SACxC,OACE,cAACwB,GAAA,EAAD,CAAOzD,QAASA,EAASpD,MAAO,CAAE0D,SAAU,IAA5C,SACE,iCAAS2B,OCwHAyB,GApHC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACXpE,EAAUC,cAEVrB,EAAWsB,cAGTC,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAEFkE,EAAWjE,aAAY,SAACC,GAAD,OAAWA,EAAMgE,YACtCC,EAA0BD,EAA1BC,QAASC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,MAGPC,EADErE,aAAY,SAACC,GAAD,OAAWA,EAAMqE,cACxCC,QAGSC,EADExE,aAAY,SAACC,GAAD,OAAWA,EAAMwE,cACxCF,QAEFG,EAAa1E,aAAY,SAACC,GAAD,OAAWA,EAAMyE,cAErCC,EAGPD,EAHFR,QACOU,EAELF,EAFFP,MACSU,EACPH,EADFH,QAGFtC,qBAAU,WACRzD,EHhBqB,uCAAM,WAAOA,EAAU4E,GAAjB,yBAAA3E,EAAA,sEAE3BD,EAAS,CACPE,KAAM6D,IAHmB,EAQvBa,IADWrD,EAPY,EAOzBG,UAAaH,SAGTpB,EAAS,CACbC,QAAS,CACPyE,cAAc,UAAD,OAAYtD,EAASuD,SAZX,SAgBJzE,IAAMiG,IAAN,aAAwBnG,GAhBpB,gBAgBnBI,EAhBmB,EAgBnBA,KAERP,EAAS,CACPE,KAAM8D,EACNxD,QAASD,IApBgB,kDAuBrBO,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAM+D,EACNzD,QAASM,IA7BgB,0DAAN,yDGiBhBS,GACHH,EAAQkC,KAAK,OAEd,CACDtD,EACAuB,EACAH,EACAyE,EACAG,EACAK,IASF,OACE,eAAC,EAAD,CAAYnD,MAAK,uBAAkB3B,GAAYA,EAASP,KAAvC,MAAjB,UACE,cAAC,IAAD,CAAMuC,GAAG,cAAT,SACE,cAACI,EAAA,EAAD,CAAQlF,MAAO,CAAE8H,WAAY,GAAIC,aAAc,GAAK5C,KAAK,KAAzD,+BAID8B,GAAW,cAAC,GAAD,IACXS,GAAiB,cAAC,GAAD,IACjBR,GAAS,cAAC,GAAD,CAAc9D,QAAQ,SAAtB,SAAgC8D,IACzCS,GACC,cAAC,GAAD,CAAcvE,QAAQ,SAAtB,SAAgCuE,IAEjCR,GACCA,EACGa,UACAC,QAAO,SAACC,GAAD,OACNA,EAAazD,MAAM0D,cAAcC,SAASrB,EAAOoB,kBAElDE,KAAI,SAACC,GAAD,OACH,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMxI,MAAO,CAAEyI,OAAQ,IAAvB,UACE,eAACD,EAAA,EAAK/F,OAAN,CAAazC,MAAO,CAAEI,QAAS,QAA/B,UACE,sBACEJ,MAAO,CACL0I,MAAO,QACPC,eAAgB,OAChBC,KAAM,EACNC,OAAQ,UACRC,UAAW,SACXpF,SAAU,IAPd,SASE,cAAC6E,EAAA,EAAU5E,OAAX,CACEoF,GAAIP,IAAKQ,KACT5F,QAAQ,OACR6F,SAAS,IAHX,SAIGX,EAAK7D,UAGV,gCACE,cAACS,EAAA,EAAD,CAAQ3B,KAAI,gBAAW+E,EAAKY,KAA5B,kBACA,cAAChE,EAAA,EAAD,CACE9B,QAAQ,SACR3C,UAAU,OACVkE,QAAS,kBAlDNd,EAkD0ByE,EAAKY,SAjDhDC,OAAOC,QAAQ,kBACjB7H,EAAS2E,GAAYrC,KAFH,IAACA,GA+CL,0BAQJ,cAAC0E,EAAA,EAAU3E,SAAX,CAAoBqF,SAAS,IAA7B,SACE,eAACT,EAAA,EAAKa,KAAN,WACE,6BACE,eAACC,EAAA,EAAD,CAAOlG,QAAQ,UAAf,uBAAoCkF,EAAKiB,cAE3C,6BAAY9I,UAAU,kBAAtB,UACE,4BAAI6H,EAAKkB,UACT,yBAAQ/I,UAAU,oBAAlB,uBACa,IACX,sBAAMgE,MAAM,eAAZ,SACG6D,EAAKmB,UAAUC,UAAU,EAAG,qBAvC3BpB,EAAKY,YCHlBS,I,OA5DK,SAAC,GAAiB,IAAfhH,EAAc,EAAdA,QACrB,EAA0BiH,mBAAS,IAAnC,mBAAOvI,EAAP,KAAcwI,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOtI,EAAP,KAAiBwI,EAAjB,KAEMvI,EAAWsB,cAEXI,EAAYF,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCgE,EAA6BhE,EAA7BgE,QAASC,EAAoBjE,EAApBiE,MAAOpE,EAAaG,EAAbH,SAExBkC,qBAAU,WACJlC,GACFH,EAAQkC,KAAK,cAEd,CAAClC,EAASG,IAEb,IAAMiH,EAAa,uCAAG,WAAO3F,GAAP,SAAA5C,EAAA,sDACpB4C,EAAE4F,iBACFzI,EAASH,EAAMC,EAAOC,IAFF,2CAAH,sDAKnB,OACE,8BACE,cAAC,EAAD,CAAYmD,MAAM,QAAlB,SACE,sBAAKhE,UAAU,iBAAf,UACGyG,GAAS,cAAC,GAAD,CAAc9D,QAAQ,SAAtB,SAAgC8D,IACzCD,GAAW,cAAC,GAAD,IACZ,eAAClD,EAAA,EAAD,CAAMkG,SAAUF,EAAhB,UACE,eAAChG,EAAA,EAAKmG,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,4BACA,cAACrG,EAAA,EAAKsG,QAAN,CACE5I,KAAK,QACL6C,MAAOjD,EACP6C,YAAY,cACZC,SAAU,SAACC,GAAD,OAAOyF,EAASzF,EAAEC,OAAOC,aAGvC,eAACP,EAAA,EAAKmG,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,uBACA,cAACrG,EAAA,EAAKsG,QAAN,CACE5I,KAAK,WACL6C,MAAOhD,EACP4C,YAAY,WACZC,SAAU,SAACC,GAAD,OAAO0F,EAAY1F,EAAEC,OAAOC,aAG1C,cAACY,EAAA,EAAD,CAAQ9B,QAAQ,UAAU3B,KAAK,SAA/B,uBAIF,cAAClB,EAAA,EAAD,CAAKE,UAAU,OAAf,SACE,eAACD,EAAA,EAAD,6BACiB,cAAC,IAAD,CAAMsE,GAAG,YAAT,yCCqFdwF,I,OAxIQ,WACrB,MAAwBV,mBAAS,IAAjC,mBAAOrH,EAAP,KAAagI,EAAb,KACA,EAA0BX,mBAAS,IAAnC,mBAAOvI,EAAP,KAAcwI,EAAd,KACA,EAAsBD,mBACpB,sFADF,mBAAOpH,EAAP,KAAYgI,EAAZ,KAGA,EAAgCZ,mBAAS,IAAzC,mBAAOtI,EAAP,KAAiBwI,EAAjB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOa,EAAP,KAAwBC,EAAxB,KACA,EAAoCd,mBAAS,MAA7C,mBAAOe,EAAP,KAAmBC,EAAnB,KACA,EAA8BhB,mBAAS,IAAvC,mBAAOvH,EAAP,KAAgBwI,EAAhB,KAEMlI,EAAUC,cAEVrB,EAAWsB,cAEXiI,EAAe/H,aAAY,SAACC,GAAD,OAAWA,EAAM8H,gBAC1C7D,EAA6B6D,EAA7B7D,QAASC,EAAoB4D,EAApB5D,MAAOpE,EAAagI,EAAbhI,SAExBkC,qBAAU,WACJlC,GACFH,EAAQkC,KAAK,cAEd,CAAClC,EAASG,IAEb,IAAMiH,EAAa,uCAAG,WAAO3F,GAAP,SAAA5C,EAAA,sDACpB4C,EAAE4F,iBAEE1I,IAAamJ,EACfI,EAAW,0BAEXA,EAAW,MACXtJ,EAASe,EAASC,EAAMlB,EAAOC,EAAUkB,KAPvB,2CAAH,sDAwCnB,OACE,8BACE,cAAC,EAAD,CAAYiC,MAAM,WAAlB,SACE,sBAAKhE,UAAU,oBAAf,UACGyG,GAAS,cAAC,GAAD,CAAc9D,QAAQ,SAAtB,SAAgC8D,IACzC7E,GAAW,cAAC,GAAD,CAAce,QAAQ,SAAtB,SAAgCf,IAC3C4E,GAAW,cAAC,GAAD,IACZ,eAAClD,EAAA,EAAD,CAAMkG,SAAUF,EAAhB,UACE,eAAChG,EAAA,EAAKmG,MAAN,CAAYC,UAAU,gBAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,mBACA,cAACrG,EAAA,EAAKsG,QAAN,CACE5I,KAAK,OACL6C,MAAO/B,EACP2B,YAAY,aACZC,SAAU,SAACC,GAAD,OAAOmG,EAAQnG,EAAEC,OAAOC,aAGtC,eAACP,EAAA,EAAKmG,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,4BACA,cAACrG,EAAA,EAAKsG,QAAN,CACE5I,KAAK,QACL6C,MAAOjD,EACP6C,YAAY,cACZC,SAAU,SAACC,GAAD,OAAOyF,EAASzF,EAAEC,OAAOC,aAGvC,eAACP,EAAA,EAAKmG,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,uBACA,cAACrG,EAAA,EAAKsG,QAAN,CACE5I,KAAK,WACL6C,MAAOhD,EACP4C,YAAY,WACZC,SAAU,SAACC,GAAD,OAAO0F,EAAY1F,EAAEC,OAAOC,aAG1C,eAACP,EAAA,EAAKmG,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,+BACA,cAACrG,EAAA,EAAKsG,QAAN,CACE5I,KAAK,WACL6C,MAAOmG,EACPvG,YAAY,mBACZC,SAAU,SAACC,GAAD,OAAOsG,EAAmBtG,EAAEC,OAAOC,aAGhDqG,GACC,cAAC,GAAD,CAAcvH,QAAQ,SAAtB,SAAgCuH,IAElC,eAAC5G,EAAA,EAAKmG,MAAN,CAAYC,UAAU,MAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,8BACA,cAACrG,EAAA,EAAKgH,KAAN,CACE5G,SAAU,SAACC,GAAD,OA/EJ,SAAC4G,GACnB,GAEE,uFADAA,EAGA,OAAOJ,EAAc,0BAGvB,GADAA,EAAc,MACI,eAAdI,EAAKvJ,MAAuC,cAAduJ,EAAKvJ,KAiBrC,OAAOmJ,EAAc,0BAhBrB,IAAM9I,EAAO,IAAImJ,SACjBnJ,EAAKoJ,OAAO,OAAQF,GACpBlJ,EAAKoJ,OAAO,gBAAiB,kBAC7BpJ,EAAKoJ,OAAO,aAAc,aAC1BC,MAAM,yDAA0D,CAC9DC,OAAQ,OACRC,KAAMvJ,IAELwJ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACxJ,GACL0I,EAAO1I,EAAK2J,IAAIC,eAEjBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAyDWG,CAAY3H,EAAEC,OAAO2H,MAAM,KAC5CnI,GAAG,cACHpC,KAAK,YACLwK,MAAM,yBACNC,QAAM,OAGV,cAAChH,EAAA,EAAD,CAAQ9B,QAAQ,UAAU3B,KAAK,SAA/B,yBAIF,cAAClB,EAAA,EAAD,CAAKE,UAAU,OAAf,SACE,eAACD,EAAA,EAAD,gCACoB,cAAC,IAAD,CAAMsE,GAAG,SAAT,iC,SC5CjBqH,GApFI,SAAC,GAAiB,IAAfxJ,EAAc,EAAdA,QACpB,EAA0BiH,mBAAS,IAAnC,mBAAOnF,EAAP,KAAc2H,EAAd,KACA,EAA8BxC,mBAAS,IAAvC,mBAAOJ,EAAP,KAAgB6C,EAAhB,KACA,EAAgCzC,mBAAS,IAAzC,mBAAOL,EAAP,KAAiB+C,EAAjB,KAEM/K,EAAWsB,cAEXwE,EAAatE,aAAY,SAACC,GAAD,OAAWA,EAAMqE,cACxCJ,EAAmBI,EAAnBJ,QAASC,EAAUG,EAAVH,MAEXqF,EAAe,WACnBH,EAAS,IACTC,EAAW,IACXC,EAAY,KAWd,OACE,cAAC,EAAD,CAAY7H,MAAM,gBAAlB,SACE,eAAC+D,EAAA,EAAD,WACE,cAACA,EAAA,EAAK/F,OAAN,gCACA,cAAC+F,EAAA,EAAKa,KAAN,UACE,eAACtF,EAAA,EAAD,CAAMkG,SAbQ,SAAC7F,GACrBA,EAAE4F,iBACGvF,GAAU+E,GAAYD,IAC3BhI,EN2BF,SAACkD,EAAO+E,EAASD,GAAjB,8CAA8B,WAAOhI,EAAU4E,GAAjB,yBAAA3E,EAAA,sEAE1BD,EAAS,CACPE,KAAMgE,IAHkB,EAQtBU,IADWrD,EAPW,EAOxBG,UAAaH,SAGTpB,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChByE,cAAc,UAAD,OAAYtD,EAASuD,SAbZ,SAiBHzE,IAAMC,KAAN,oBAErB,CAAE4C,QAAO+E,UAASD,YAClB7H,GApBwB,gBAiBlBI,EAjBkB,EAiBlBA,KAMRP,EAAS,CACPE,KAAMiE,EACN3D,QAASD,IAzBe,kDA4BpBO,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAMkE,EACN5D,QAASM,IAlCe,0DAA9B,wDM3BWmK,CAAY/H,EAAO+E,EAASD,IACrCgD,IACA5J,EAAQkC,KAAK,cAQP,UACGqC,GAAS,cAAC,GAAD,CAAc9D,QAAQ,SAAtB,SAAgC8D,IAC1C,eAACnD,EAAA,EAAKmG,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,oBACA,cAACrG,EAAA,EAAKsG,QAAN,CACE5I,KAAK,OACL6C,MAAOG,EACPP,YAAY,kBACZC,SAAU,SAACC,GAAD,OAAOgI,EAAShI,EAAEC,OAAOC,aAGvC,eAACP,EAAA,EAAKmG,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,sBACA,cAACrG,EAAA,EAAKsG,QAAN,CACEtB,GAAG,WACHzE,MAAOkF,EACPtF,YAAY,oBACZuI,KAAM,EACNtI,SAAU,SAACC,GAAD,OAAOiI,EAAWjI,EAAEC,OAAOC,aAGxCkF,GACC,eAAChB,EAAA,EAAD,WACE,cAACA,EAAA,EAAK/F,OAAN,2BACA,cAAC+F,EAAA,EAAKa,KAAN,UACE,cAAC,KAAD,UAAgBG,SAItB,eAACzF,EAAA,EAAKmG,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,uBACA,cAACrG,EAAA,EAAKsG,QAAN,CACE5I,KAAK,OACL6C,MAAOiF,EACPrF,YAAY,qBACZC,SAAU,SAACC,GAAD,OAAOkI,EAAYlI,EAAEC,OAAOC,aAGzC2C,GAAW,cAAC,GAAD,CAAS9B,KAAM,KAC3B,cAACD,EAAA,EAAD,CAAQzD,KAAK,SAAS2B,QAAQ,UAA9B,yBAGA,cAAC8B,EAAA,EAAD,CAAQzE,UAAU,OAAOkE,QAAS4H,EAAcnJ,QAAQ,SAAxD,+BAKJ,eAACoF,EAAA,EAAKzI,OAAN,CAAaU,UAAU,aAAvB,4BACiB,IAAIiM,MAAOC,8BC2CrBC,OAvHf,YAAyC,IAAnBC,EAAkB,EAAlBA,MAAOlK,EAAW,EAAXA,QAC3B,EAA0BiH,mBAAS,IAAnC,mBAAOnF,EAAP,KAAc2H,EAAd,KACA,EAA8BxC,mBAAS,IAAvC,mBAAOJ,EAAP,KAAgB6C,EAAhB,KACA,EAAgCzC,mBAAS,IAAzC,mBAAOL,EAAP,KAAiB+C,EAAjB,KACA,EAAwB1C,mBAAS,IAAjC,mBAAOkD,EAAP,KAAaC,EAAb,KAEMxL,EAAWsB,cAEX2E,EAAazE,aAAY,SAACC,GAAD,OAAWA,EAAMwE,cACxCP,EAAmBO,EAAnBP,QAASC,EAAUM,EAAVN,MAEXO,EAAa1E,aAAY,SAACC,GAAD,OAAWA,EAAMyE,cAC/BC,EAAsCD,EAA/CR,QAA+BU,EAAgBF,EAAvBP,MAqChC,OA5BAlC,qBAAU,YACM,uCAAG,8BAAAxD,EAAA,sEACQI,IAAMiG,IAAN,qBAAwBgF,EAAMG,OAAOnJ,KAD7C,gBACP/B,EADO,EACPA,KAERsK,EAAStK,EAAK2C,OACd4H,EAAWvK,EAAK0H,SAChB8C,EAAYxK,EAAKyH,UACjBwD,EAAQjL,EAAKmL,WANE,2CAAH,qDASdC,KACC,CAACL,EAAMG,OAAOnJ,GAAIiJ,IAkBnB,cAAC,EAAD,CAAYrI,MAAM,YAAlB,SACE,eAAC+D,EAAA,EAAD,WACE,cAACA,EAAA,EAAK/F,OAAN,6BACA,cAAC+F,EAAA,EAAKa,KAAN,UACE,eAACtF,EAAA,EAAD,CAAMkG,SAdQ,SAAC7F,GACrBA,EAAE4F,iBACFzI,EP6CF,SAACsC,EAAIY,EAAO+E,EAASD,GAArB,8CAAkC,WAAOhI,EAAU4E,GAAjB,yBAAA3E,EAAA,sEAE9BD,EAAS,CACPE,KAAMmE,IAHsB,EAQ1BO,IADWrD,EAPe,EAO5BG,UAAaH,SAGTpB,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChByE,cAAc,UAAD,OAAYtD,EAASuD,SAbR,SAiBPzE,IAAMuL,IAAN,qBACPtJ,GACd,CAAEY,QAAO+E,UAASD,YAClB7H,GApB4B,gBAiBtBI,EAjBsB,EAiBtBA,KAMRP,EAAS,CACPE,KAAMoE,EACN9D,QAASD,IAzBmB,kDA4BxBO,EACJ,KAAMD,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,QACZd,EAAS,CACPE,KAAMqE,EACN/D,QAASM,IAlCmB,0DAAlC,wDO7CW+K,CAAYP,EAAMG,OAAOnJ,GAAIY,EAAO+E,EAASD,IACjD9E,GAAU+E,GAAYD,IAR3B6C,EAAS,IACTE,EAAY,IACZD,EAAW,IASX1J,EAAQkC,KAAK,cAQP,UACG6C,GAAiB,cAAC,GAAD,IACjBR,GAAS,cAAC,GAAD,CAAc9D,QAAQ,SAAtB,SAAgC8D,IACzCS,GACC,cAAC,GAAD,CAAcvE,QAAQ,SAAtB,SAAgCuE,IAElC,eAAC5D,EAAA,EAAKmG,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,oBACA,cAACrG,EAAA,EAAKsG,QAAN,CACE5I,KAAK,QACLyC,YAAY,kBACZI,MAAOG,EACPN,SAAU,SAACC,GAAD,OAAOgI,EAAShI,EAAEC,OAAOC,aAIvC,eAACP,EAAA,EAAKmG,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,sBACA,cAACrG,EAAA,EAAKsG,QAAN,CACEtB,GAAG,WACH7E,YAAY,oBACZuI,KAAM,EACNnI,MAAOkF,EACPrF,SAAU,SAACC,GAAD,OAAOiI,EAAWjI,EAAEC,OAAOC,aAGxCkF,GACC,eAAChB,EAAA,EAAD,WACE,cAACA,EAAA,EAAK/F,OAAN,2BACA,cAAC+F,EAAA,EAAKa,KAAN,UACE,cAAC,KAAD,UAAgBG,SAKtB,eAACzF,EAAA,EAAKmG,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,uBACA,cAACrG,EAAA,EAAKsG,QAAN,CACE5I,KAAK,UACLyC,YAAY,qBACZI,MAAOiF,EACPpF,SAAU,SAACC,GAAD,OAAOkI,EAAYlI,EAAEC,OAAOC,aAGzC2C,GAAW,cAAC,GAAD,CAAS9B,KAAM,KAC3B,cAACD,EAAA,EAAD,CAAQ9B,QAAQ,UAAU3B,KAAK,SAA/B,yBAGA,cAACyD,EAAA,EAAD,CACEzE,UAAU,OACVkE,QAAS,kBA1FEd,EA0FkBgJ,EAAMG,OAAOnJ,GAzFhDsF,OAAOC,QAAQ,kBACjB7H,EAAS2E,GAAYrC,SAEvBlB,EAAQkC,KAAK,YAJO,IAAChB,GA2FXT,QAAQ,SAHV,8BASJ,eAACoF,EAAA,EAAKzI,OAAN,CAAaU,UAAU,aAAvB,0BACgBqM,EAAKpD,UAAU,EAAG,aCsB3B2D,I,OAvIO,SAAC,GAA0B,EAAxBC,SAAyB,IAAf3K,EAAc,EAAdA,QACjC,EAAwBiH,mBAAS,IAAjC,mBAAOrH,EAAP,KAAagI,EAAb,KACA,EAA0BX,mBAAS,IAAnC,mBAAOvI,EAAP,KAAcwI,EAAd,KACA,EAAsBD,qBAAtB,mBAAOpH,EAAP,KAAYgI,EAAZ,KACA,EAAgCZ,mBAAS,IAAzC,mBAAOtI,EAAP,KAAiBwI,EAAjB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOa,EAAP,KAAwBC,EAAxB,KACA,EAAoCd,qBAApC,mBAAOe,EAAP,KAAmBC,EAAnB,KAEMrJ,EAAWsB,cAGTC,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAEFyK,EAAaxK,aAAY,SAACC,GAAD,OAAWA,EAAMuK,cACxCtG,EAA4BsG,EAA5BtG,QAASC,EAAmBqG,EAAnBrG,MAAOI,EAAYiG,EAAZjG,QAExBtC,qBAAU,WACHlC,GAGHyH,EAAQzH,EAASP,MACjBsH,EAAS/G,EAASzB,OAClBmJ,EAAO1H,EAASN,MAJhBG,EAAQkC,KAAK,OAMd,CAAClC,EAASG,IAgCb,OACE,cAAC,EAAD,CAAY2B,MAAM,eAAlB,SACE,8BACE,eAAClE,EAAA,EAAD,CAAKE,UAAU,mBAAf,UACE,cAACD,EAAA,EAAD,CAAKgN,GAAI,EAAT,SACE,eAACzJ,EAAA,EAAD,CAAMkG,SAXM,SAAC7F,Gb4BI,IAACqJ,Ea3B1BrJ,EAAE4F,iBAEFzI,GbyB0BkM,EazBH,CAAElL,OAAMlB,QAAOC,WAAUkB,ObyBvB,uCAAU,WAAOjB,EAAU4E,GAAjB,uBAAA3E,EAAA,sEAEnCD,EAAS,CAAEE,KAAMR,IAFkB,EAM/BkF,IADWrD,EALoB,EAKjCG,UAAaH,SAGTpB,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChByE,cAAc,UAAD,OAAYtD,EAASuD,SAXH,SAeZzE,IAAMC,KAAK,qBAAsB4L,EAAM/L,GAf3B,gBAe3BI,EAf2B,EAe3BA,KAERP,EAAS,CAAEE,KAAMP,EAAqBa,QAASD,IAE/CP,EAAS,CAAEE,KAAMd,EAAoBoB,QAASD,IAE9CE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,IArBb,kDAuBnCP,EAAS,CACPE,KAAMN,EACNY,QACE,KAAMK,UAAY,KAAMA,SAASN,KAAKO,QAClC,KAAMD,SAASN,KAAKO,QACpB,KAAMA,UA5BqB,0DAAV,2DajBjB,UACG4E,GAAW,cAAC,GAAD,IACXK,GACC,cAAC,GAAD,CAAclE,QAAQ,UAAtB,kCAID8D,GAAS,cAAC,GAAD,CAAc9D,QAAQ,SAAtB,SAAgC8D,IAC1C,eAACnD,EAAA,EAAKmG,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,mBACA,cAACrG,EAAA,EAAKsG,QAAN,CACE5I,KAAK,OACLyC,YAAY,aACZI,MAAO/B,EACP4B,SAAU,SAACC,GAAD,OAAOmG,EAAQnG,EAAEC,OAAOC,aAEtC,eAACP,EAAA,EAAKmG,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,4BACA,cAACrG,EAAA,EAAKsG,QAAN,CACE5I,KAAK,QACLyC,YAAY,cACZI,MAAOjD,EACP8C,SAAU,SAACC,GAAD,OAAOyF,EAASzF,EAAEC,OAAOC,aAEvC,eAACP,EAAA,EAAKmG,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,uBACA,cAACrG,EAAA,EAAKsG,QAAN,CACE5I,KAAK,WACLyC,YAAY,iBACZI,MAAOhD,EACP6C,SAAU,SAACC,GAAD,OAAO0F,EAAY1F,EAAEC,OAAOC,aAE1C,eAACP,EAAA,EAAKmG,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,+BACA,cAACrG,EAAA,EAAKsG,QAAN,CACE5I,KAAK,WACLyC,YAAY,mBACZI,MAAOmG,EACPtG,SAAU,SAACC,GAAD,OACRsG,EAAmBtG,EAAEC,OAAOC,aAEpB,IACbqG,GACC,cAAC,GAAD,CAAcvH,QAAQ,SAAtB,SAAgCuH,IAElC,eAAC5G,EAAA,EAAKmG,MAAN,CAAYC,UAAU,MAAtB,UACE,cAACpG,EAAA,EAAKqG,MAAN,qCACA,cAACrG,EAAA,EAAKgH,KAAN,CACE5G,SAAU,SAACC,GAAD,OAnFN,SAAC4G,GAEnB,GADAJ,EAAc,MACI,eAAdI,EAAKvJ,MAAuC,cAAduJ,EAAKvJ,KAkBrC,OAAOmJ,EAAc,0BAjBrB,IAAM9I,EAAO,IAAImJ,SACjBnJ,EAAKoJ,OAAO,OAAQF,GACpBlJ,EAAKoJ,OAAO,gBAAiB,kBAC7BpJ,EAAKoJ,OAAO,aAAc,aAC1BC,MAAM,yDAA0D,CAC9DC,OAAQ,OACRC,KAAMvJ,IAELwJ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACxJ,GACL0I,EAAO1I,EAAK2J,IAAIC,YAChBG,QAAQC,IAAItJ,MAEbmJ,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAkEaG,CAAY3H,EAAEC,OAAO2H,MAAM,KAC5CnI,GAAG,cACHpC,KAAK,YACLwK,MAAM,yBACNC,QAAM,OAGV,cAAChH,EAAA,EAAD,CAAQzD,KAAK,SAASiM,QAAQ,UAA9B,yBAKJ,cAAClN,EAAA,EAAD,CACER,MAAO,CACLI,QAAS,OACToG,WAAY,SACZnG,eAAgB,UAJpB,SAME,qBAAKsN,IAAKnL,EAAKoL,IAAKrL,EAAM9B,UAAU,0BCnGjCoN,GAxBH,WACV,MAA4BjE,mBAAS,IAArC,mBAAO7C,EAAP,KAAerE,EAAf,KAEA,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAQA,UAAWA,IACnB,iCACE,cAAC,IAAD,CAAOoL,KAAK,IAAIC,UAAWhJ,EAAaiJ,OAAK,IAC7C,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWpE,GAAaqE,OAAK,IAClD,cAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWV,GAAeW,OAAK,IACtD,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWzD,GAAgB0D,OAAK,IACxD,cAAC,IAAD,CAAOF,KAAK,cAAcC,UAAW5B,GAAY6B,OAAK,IACtD,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWnB,GAAYoB,OAAK,IACpD,cAAC,IAAD,CACEF,KAAK,WACLC,UAAW,kBAAM,cAAC,GAAD,CAAShH,OAAQA,KAClCiH,OAAK,OAGT,cAAC,EAAD,QCpBSC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,2BCQRO,GAAUC,2BAAgB,CAC9BzL,UCH8B,WAAyB,IAAxBD,EAAuB,uDAAf,GAAI2L,EAAW,uCACtD,OAAQA,EAAOlN,MACb,KAAKf,EACH,MAAO,CAAEuG,SAAS,GACpB,KAAKtG,EACH,MAAO,CAAEsG,SAAS,EAAOnE,SAAU6L,EAAO5M,SAC5C,KAAKnB,EACH,MAAO,CAAEqG,SAAS,EAAOC,MAAOyH,EAAO5M,SACzC,KAAKlB,EACH,MAAO,GACT,QACE,OAAOmC,IDPX8H,aCWiC,WAAyB,IAAxB9H,EAAuB,uDAAf,GAAI2L,EAAW,uCACzD,OAAQA,EAAOlN,MACb,KAAKX,EACH,MAAO,CAAEmG,SAAS,GACpB,KAAKlG,EACH,MAAO,CAAEkG,SAAS,EAAOnE,SAAU6L,EAAO5M,SAC5C,KAAKf,EACH,MAAO,CAAEiG,SAAS,EAAOC,MAAOyH,EAAO5M,SACzC,QACE,OAAOiB,IDnBXgE,SED6B,WAAoC,IAAnChE,EAAkC,uDAA1B,CAAEmE,MAAO,IAAMwH,EAAW,uCAChE,OAAQA,EAAOlN,MACb,KAAK6D,EACH,MAAO,CAAE2B,SAAS,GACpB,KAAK1B,EACH,MAAO,CAAE0B,SAAS,EAAOE,MAAOwH,EAAO5M,SACzC,KAAKyD,EACH,MAAO,CAAEyB,SAAS,EAAOC,MAAOyH,EAAO5M,SACzC,QACE,OAAOiB,IFPXqE,WEa+B,WAAyB,IAAxBrE,EAAuB,uDAAf,GAAI2L,EAAW,uCACvD,OAAQA,EAAOlN,MACb,KAAKgE,EACH,MAAO,CAAEwB,SAAS,GACpB,KAAKvB,EACH,MAAO,CAAEuB,SAAS,EAAOK,SAAS,GACpC,KAAK3B,EACH,MAAO,CAAEsB,SAAS,EAAOC,MAAOyH,EAAO5M,SACzC,QACE,OAAOiB,IFrBXwE,WE2B+B,WAAyB,IAAxBxE,EAAuB,uDAAf,GAAI2L,EAAW,uCACvD,OAAQA,EAAOlN,MACb,KAAKmE,EACH,MAAO,CAAEqB,SAAS,GACpB,KAAKpB,EACH,MAAO,CAAEoB,SAAS,EAAOK,SAAS,GACpC,KAAKxB,EACH,MAAO,CAAEmB,SAAS,EAAOC,MAAOyH,EAAO5M,QAASuF,SAAS,GAE3D,QACE,OAAOtE,IFpCXyE,WE0C+B,WAAyB,IAAxBzE,EAAuB,uDAAf,GAAI2L,EAAW,uCACvD,OAAQA,EAAOlN,MACb,KAAKsE,EACH,MAAO,CAAEkB,SAAS,GACpB,KAAKjB,GACH,MAAO,CAAEiB,SAAS,EAAOK,SAAS,GACpC,KAAKrB,GACH,MAAO,CAAEgB,SAAS,EAAOC,MAAOyH,EAAO5M,QAASuF,SAAS,GAE3D,QACE,OAAOtE,IFnDXuK,WCmB+B,WAAyB,IAAxBvK,EAAuB,uDAAf,GAAI2L,EAAW,uCACvD,OAAQA,EAAOlN,MACb,KAAKR,EACH,MAAO,CAAEgG,SAAS,GACpB,KAAK/F,EACH,MAAO,CAAE+F,SAAS,EAAOnE,SAAU6L,EAAO5M,QAASuF,SAAS,GAC9D,KAAKnG,EACH,MAAO,CAAE8F,SAAS,EAAOC,MAAOyH,EAAO5M,QAASuF,SAAS,GAC3D,QACE,OAAOtE,MDrBP4L,GAAe,CACnB3L,UAAW,CAAEH,SALad,aAAaiD,QAAQ,YAC7C/C,KAAK2M,MAAM7M,aAAaiD,QAAQ,aAChC,OAME6J,GAAa,CAACC,MAQLC,GANDC,uBACZR,GACAG,GACAM,+BAAoBC,mBAAe,WAAf,EAAmBL,MG7BzCM,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFM,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.47ed9ba3.chunk.js","sourcesContent":["import { Col, Container, Row } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer\r\n      style={{\r\n        width: '100%',\r\n        position: 'relative',\r\n        bottom: 0,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n      }}>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">\r\n            <b>Copyright &copy; Online Notes</b>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\n","import axios from 'axios';\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n} from '../constants/userConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\n// ===============================================================================================================\r\n\r\nexport const register = (name, email, password, pic) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password, pic },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\n// ===============================================================================================================\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\n// ===============================================================================================================\r\n\r\nexport const updateProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post('/api/users/profile', user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import {\r\n  Container,\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { logout } from '../../actions/userActions';\r\n\r\nconst Header = ({ setSearch }) => {\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Brand\r\n          href=\"/\"\r\n          style={{\r\n            fontFamily: \"'Dancing Script', cursive\",\r\n            fontWeight: '700',\r\n            fontSize: '30px',\r\n          }}>\r\n          Online Notes\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"m-auto\">\r\n            <Form inline>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                className=\"mr-sm=2\"\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n            </Form>\r\n          </Nav>\r\n\r\n          {userInfo ? (\r\n            <Nav>\r\n              <Nav.Link href=\"/mynotes\">My Notes</Nav.Link>\r\n              <NavDropdown title={userInfo?.name} id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"/profile\">My Profile</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={logoutHandler}>\r\n                  Logout\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          ) : (\r\n            <Nav>\r\n              <Nav.Link>\r\n                <Link to=\"/login\">Login</Link>\r\n              </Nav.Link>\r\n            </Nav>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useEffect } from 'react';\r\nimport { Button, Container, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './landingPage.css';\r\n\r\nconst LandingPage = ({ history }) => {\r\n  useEffect(() => {\r\n    const userInfo = localStorage.getItem('userInfo');\r\n    if (userInfo) {\r\n      history.push('/mynotes');\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"intro-text\">\r\n            <div>\r\n              <h1 className=\"title\">Online Notes</h1>\r\n              <p className=\"subtitle\">\r\n                <b>One Safe place for all your notes.</b>\r\n              </p>\r\n            </div>\r\n            <div className=\"buttonContainer\">\r\n              <Link to=\"/login\">\r\n                <Button size=\"lg\" className=\"landingbutton\">\r\n                  Login\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/register\">\r\n                <Button size=\"lg\" className=\"landingbutton\">\r\n                  Signup\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import { Container, Row } from 'react-bootstrap';\r\nimport './mainScreen.css';\r\n\r\nconst MainScreen = ({ title, children }) => {\r\n  return (\r\n    <div className=\"mainback\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"page\">\r\n            {title && (\r\n              <>\r\n                <h1 className=\"heading\">{title}</h1>\r\n                <hr />\r\n              </>\r\n            )}\r\n            {children}\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","export const NOTE_LIST_REQUEST = 'NOTE_LIST_REQUEST';\r\nexport const NOTE_LIST_SUCCESS = 'NOTE_LIST_SUCCESS';\r\nexport const NOTE_LIST_FAIL = 'NOTE_LIST_FAIL';\r\n\r\nexport const NOTE_CREATE_REQUEST = 'NOTE_CREATE_REQUEST';\r\nexport const NOTE_CREATE_SUCCESS = 'NOTE_CREATE_SUCCESS';\r\nexport const NOTE_CREATE_FAIL = 'NOTE_CREATE_FAIL';\r\n\r\nexport const NOTE_UPDATE_REQUEST = 'NOTE_UPDATE_REQUEST';\r\nexport const NOTE_UPDATE_SUCCESS = 'NOTE_UPDATE_SUCCESS';\r\nexport const NOTE_UPDATE_FAIL = 'NOTE_UPDATE_FAIL';\r\n\r\nexport const NOTE_DELETE_REQUEST = 'NOTE_DELETE_REQUEST';\r\nexport const NOTE_DELETE_SUCCESS = 'NOTE_DELETE_SUCCESS';\r\nexport const NOTE_DELETE_FAIL = 'NOTE_DELETE_FAIL';\r\n","import axios from 'axios';\r\nimport {\r\n  NOTE_CREATE_FAIL,\r\n  NOTE_CREATE_REQUEST,\r\n  NOTE_CREATE_SUCCESS,\r\n  NOTE_DELETE_FAIL,\r\n  NOTE_DELETE_REQUEST,\r\n  NOTE_DELETE_SUCCESS,\r\n  NOTE_LIST_FAIL,\r\n  NOTE_LIST_REQUEST,\r\n  NOTE_LIST_SUCCESS,\r\n  NOTE_UPDATE_FAIL,\r\n  NOTE_UPDATE_REQUEST,\r\n  NOTE_UPDATE_SUCCESS,\r\n} from '../constants/notesContansts';\r\n\r\n// -----------------------------------------------------------------------------------------------------------\r\n\r\nexport const listNotes = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: NOTE_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/notes`, config);\r\n\r\n    dispatch({\r\n      type: NOTE_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: NOTE_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n// -----------------------------------------------------------------------------------------------------------\r\n\r\nexport const createNotes =\r\n  (title, content, category) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: NOTE_CREATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/api/notes/create`,\r\n        { title, content, category },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: NOTE_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: NOTE_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n// -----------------------------------------------------------------------------------------------------------\r\n\r\nexport const updateNotes =\r\n  (id, title, content, category) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: NOTE_UPDATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/notes/${id}`,\r\n        { title, content, category },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: NOTE_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: NOTE_UPDATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n// -----------------------------------------------------------------------------------------------------------\r\n\r\nexport const deleteNotes = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: NOTE_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/notes/${id}`, config);\r\n\r\n    dispatch({ type: NOTE_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: NOTE_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import { Spinner } from 'react-bootstrap';\r\n\r\nconst Loading = ({ size = 100 }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: '100%',\r\n      }}>\r\n      <Spinner\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n        }}\r\n        animation=\"border\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { Alert } from 'react-bootstrap';\r\n\r\nconst ErrorMessage = ({ variant = 'info', children }) => {\r\n  return (\r\n    <Alert variant={variant} style={{ fontSize: 20 }}>\r\n      <strong>{children}</strong>\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Accordion, Badge, Button, Card } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport { deleteNotes, listNotes } from '../../actions/noteActions';\r\nimport Loading from '../../components/Loading';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\n\r\nconst MyNotes = ({ search }) => {\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const noteList = useSelector((state) => state.noteList);\r\n  const { loading, error, notes } = noteList;\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n  const { success: successCreate } = noteCreate;\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { success: successUpdate } = noteUpdate;\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = noteDelete;\r\n\r\n  useEffect(() => {\r\n    dispatch(listNotes());\r\n    if (!userInfo) {\r\n      history.push('/');\r\n    }\r\n  }, [\r\n    dispatch,\r\n    userInfo,\r\n    history,\r\n    successCreate,\r\n    successUpdate,\r\n    successDelete,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deleteNotes(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title={`Welcome Back ${userInfo && userInfo.name}..`}>\r\n      <Link to=\"/createnote\">\r\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\r\n          Create new Note\r\n        </Button>\r\n      </Link>\r\n      {loading && <Loading />}\r\n      {loadingDelete && <Loading />}\r\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n      {errorDelete && (\r\n        <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n      )}\r\n      {notes &&\r\n        notes\r\n          .reverse()\r\n          .filter((filteredNote) =>\r\n            filteredNote.title.toLowerCase().includes(search.toLowerCase())\r\n          )\r\n          .map((note) => (\r\n            <Accordion key={note._id}>\r\n              <Card style={{ margin: 10 }}>\r\n                <Card.Header style={{ display: 'flex' }}>\r\n                  <span\r\n                    style={{\r\n                      color: 'black',\r\n                      textDecoration: 'none',\r\n                      flex: 1,\r\n                      cursor: 'pointer',\r\n                      alignSelf: 'center',\r\n                      fontSize: 18,\r\n                    }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Text}\r\n                      variant=\"link\"\r\n                      eventKey=\"0\">\r\n                      {note.title}\r\n                    </Accordion.Toggle>\r\n                  </span>\r\n                  <div>\r\n                    <Button href={`/note/${note._id}`}>Edit</Button>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"mx-2\"\r\n                      onClick={() => deleteHandler(note._id)}>\r\n                      Delete\r\n                    </Button>\r\n                  </div>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <Card.Body>\r\n                    <h4>\r\n                      <Badge variant=\"success\">Category: {note.category}</Badge>\r\n                    </h4>\r\n                    <blockquote className=\"blockquote mb-0\">\r\n                      <p>{note.content}</p>\r\n                      <footer className=\"blockquote-footer\">\r\n                        Created on{' '}\r\n                        <cite title=\"Source Title\">\r\n                          {note.createdAt.substring(0, 10)}\r\n                        </cite>\r\n                      </footer>\r\n                    </blockquote>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          ))}\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default MyNotes;\r\n","import './loginScreen.css';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../../components/Loading';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport { login } from '../../actions/userActions';\r\n\r\nconst LoginScreen = ({ history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/mynotes');\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MainScreen title=\"LOGIN\">\r\n        <div className=\"loginContainer\">\r\n          {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n          {loading && <Loading />}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                value={email}\r\n                placeholder=\"Enter Email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n          <Row className=\"py-3\">\r\n            <Col>\r\n              New Customer ? <Link to=\"/register\">Register Here</Link>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </MainScreen>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import { useEffect, useState } from 'react';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { register } from '../../actions/userActions';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport Loading from '../../components/Loading';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport './registerScreen.css';\r\n\r\nconst RegisterScreen = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [pic, setPic] = useState(\r\n    'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg'\r\n  );\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [picMessage, setPicMessage] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/mynotes');\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage('Password do not match');\r\n    } else {\r\n      setMessage(null);\r\n      dispatch(register(name, email, password, pic));\r\n    }\r\n  };\r\n\r\n  const postDetails = (pics) => {\r\n    if (\r\n      pics ===\r\n      'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg'\r\n    ) {\r\n      return setPicMessage('Please Select an Image');\r\n    }\r\n    setPicMessage(null);\r\n    if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n      const data = new FormData();\r\n      data.append('file', pics);\r\n      data.append('upload_preset', 'notezipperMERN');\r\n      data.append('cloud_name', 'dhuej17x0');\r\n      fetch('https://api.cloudinary.com/v1_1/dhuej17x0/image/upload', {\r\n        method: 'post',\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      return setPicMessage('Please Select an Image');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MainScreen title=\"REGISTER\">\r\n        <div className=\"registerContainer\">\r\n          {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n          {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n          {loading && <Loading />}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"formBasicName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={name}\r\n                placeholder=\"Enter Name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                value={email}\r\n                placeholder=\"Enter Email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"confirmPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                placeholder=\"Confirm Password\"\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {picMessage && (\r\n              <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n            )}\r\n            <Form.Group controlId=\"pic\">\r\n              <Form.Label>Profile Picture</Form.Label>\r\n              <Form.File\r\n                onChange={(e) => postDetails(e.target.files[0])}\r\n                id=\"custom-file\"\r\n                type=\"image/png\"\r\n                label=\"Upload Profile Picture\"\r\n                custom\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              REGISTER\r\n            </Button>\r\n          </Form>\r\n          <Row className=\"py-3\">\r\n            <Col>\r\n              Have an Account ? <Link to=\"/login\">Login</Link>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </MainScreen>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import { useState } from 'react';\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createNotes } from '../../actions/noteActions';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport Loading from '../../components/Loading';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst CreateNote = ({ history }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [category, setCategory] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n  const { loading, error } = noteCreate;\r\n\r\n  const resetHandler = () => {\r\n    setTitle('');\r\n    setContent('');\r\n    setCategory('');\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !content || !category) return;\r\n    dispatch(createNotes(title, content, category));\r\n    resetHandler();\r\n    history.push('/mynotes');\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"CREATE A NOTE\">\r\n      <Card>\r\n        <Card.Header>Create a new Note</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={submitHandler}>\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={title}\r\n                placeholder=\"Enter the title\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                value={content}\r\n                placeholder=\"Enter the Content\"\r\n                rows={4}\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={category}\r\n                placeholder=\"Enter the Category\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {loading && <Loading size={50} />}\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Create Note\r\n            </Button>\r\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\r\n              Reset Fields\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n        <Card.Footer className=\"text-muted\">\r\n          Creating on - {new Date().toLocaleDateString()}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default CreateNote;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport axios from 'axios';\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport Loading from '../../components/Loading';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { deleteNotes, updateNotes } from '../../actions/noteActions';\r\n\r\nfunction SingleNote({ match, history }) {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [date, setDate] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { loading, error } = noteUpdate;\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const { loading: loadingDelete, error: errorDelete } = noteDelete;\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deleteNotes(id));\r\n    }\r\n    history.push('/mynotes');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetching = async () => {\r\n      const { data } = await axios.get(`/api/notes/${match.params.id}`);\r\n\r\n      setTitle(data.title);\r\n      setContent(data.content);\r\n      setCategory(data.category);\r\n      setDate(data.updatedAt);\r\n    };\r\n\r\n    fetching();\r\n  }, [match.params.id, date]);\r\n\r\n  const resetHandler = () => {\r\n    setTitle('');\r\n    setCategory('');\r\n    setContent('');\r\n  };\r\n\r\n  const updateHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateNotes(match.params.id, title, content, category));\r\n    if (!title || !content || !category) return;\r\n\r\n    resetHandler();\r\n    history.push('/mynotes');\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Edit Note\">\r\n      <Card>\r\n        <Card.Header>Edit your Note</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={updateHandler}>\r\n            {loadingDelete && <Loading />}\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            {errorDelete && (\r\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n            )}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                placeholder=\"Enter the title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Enter the content\"\r\n                rows={4}\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"content\"\r\n                placeholder=\"Enter the Category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {loading && <Loading size={50} />}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Update Note\r\n            </Button>\r\n            <Button\r\n              className=\"mx-2\"\r\n              onClick={() => deleteHandler(match.params.id)}\r\n              variant=\"danger\">\r\n              Delete Note\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <Card.Footer className=\"text-muted\">\r\n          Updated on - {date.substring(0, 10)}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default SingleNote;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport './profileScreen.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateProfile } from '../../actions/userActions';\r\nimport Loading from '../../components/Loading';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [pic, setPic] = useState();\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [picMessage, setPicMessage] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { loading, error, success } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/');\r\n    } else {\r\n      setName(userInfo.name);\r\n      setEmail(userInfo.email);\r\n      setPic(userInfo.pic);\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const postDetails = (pics) => {\r\n    setPicMessage(null);\r\n    if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n      const data = new FormData();\r\n      data.append('file', pics);\r\n      data.append('upload_preset', 'notezipperMERN');\r\n      data.append('cloud_name', 'dhuej17x0');\r\n      fetch('https://api.cloudinary.com/v1_1/dhuej17x0/image/upload', {\r\n        method: 'post',\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(pic);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      return setPicMessage('Please Select an Image');\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateProfile({ name, email, password, pic }));\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"EDIT PROFILE\">\r\n      <div>\r\n        <Row className=\"profileContainer\">\r\n          <Col md={6}>\r\n            <Form onSubmit={submitHandler}>\r\n              {loading && <Loading />}\r\n              {success && (\r\n                <ErrorMessage variant=\"success\">\r\n                  Updated Successfully\r\n                </ErrorMessage>\r\n              )}\r\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) =>\r\n                    setConfirmPassword(e.target.value)\r\n                  }></Form.Control>\r\n              </Form.Group>{' '}\r\n              {picMessage && (\r\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n              )}\r\n              <Form.Group controlId=\"pic\">\r\n                <Form.Label>Change Profile Picture</Form.Label>\r\n                <Form.File\r\n                  onChange={(e) => postDetails(e.target.files[0])}\r\n                  id=\"custom-file\"\r\n                  type=\"image/png\"\r\n                  label=\"Upload Profile Picture\"\r\n                  custom\r\n                />\r\n              </Form.Group>\r\n              <Button type=\"submit\" varient=\"primary\">\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n          <Col\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}>\r\n            <img src={pic} alt={name} className=\"profilePic\" />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import './App.css';\nimport Footer from './components/footer/Footer';\nimport Header from './components/header/Header';\nimport LandingPage from './screens/LandingPage/LandingPage';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport MyNotes from './screens/MyNotes/MyNotes';\nimport LoginScreen from './screens/LoginScreen/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen/RegisterScreen';\nimport CreateNote from './screens/Notes/CreateNote';\nimport SingleNote from './screens/Notes/SingleNote';\nimport { useState } from 'react';\nimport ProfileScreen from './screens/ProfileScreen/ProfileScreen';\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n\n  return (\n    <BrowserRouter>\n      <Header setSearch={setSearch} />\n      <main>\n        <Route path=\"/\" component={LandingPage} exact />\n        <Route path=\"/login\" component={LoginScreen} exact />\n        <Route path=\"/profile\" component={ProfileScreen} exact />\n        <Route path=\"/register\" component={RegisterScreen} exact />\n        <Route path=\"/createnote\" component={CreateNote} exact />\n        <Route path=\"/note/:id\" component={SingleNote} exact />\n        <Route\n          path=\"/mynotes\"\n          component={() => <MyNotes search={search} />}\n          exact\n        />\n      </main>\n      <Footer />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers';\r\nimport {\r\n  noteCreateReducer,\r\n  noteDeleteReducer,\r\n  noteListReducer,\r\n  noteUpdateReducer,\r\n} from './reducers/noteReducers';\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  noteList: noteListReducer,\r\n  noteCreate: noteCreateReducer,\r\n  noteUpdate: noteUpdateReducer,\r\n  noteDelete: noteDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  NOTE_CREATE_FAIL,\r\n  NOTE_CREATE_REQUEST,\r\n  NOTE_CREATE_SUCCESS,\r\n  NOTE_DELETE_FAIL,\r\n  NOTE_DELETE_REQUEST,\r\n  NOTE_DELETE_SUCCESS,\r\n  NOTE_LIST_FAIL,\r\n  NOTE_LIST_REQUEST,\r\n  NOTE_LIST_SUCCESS,\r\n  NOTE_UPDATE_FAIL,\r\n  NOTE_UPDATE_REQUEST,\r\n  NOTE_UPDATE_SUCCESS,\r\n} from '../constants/notesContansts';\r\n\r\n// -------------------------------------------------------------------------------------------------\r\n\r\nexport const noteListReducer = (state = { notes: [] }, action) => {\r\n  switch (action.type) {\r\n    case NOTE_LIST_REQUEST:\r\n      return { loading: true };\r\n    case NOTE_LIST_SUCCESS:\r\n      return { loading: false, notes: action.payload };\r\n    case NOTE_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// -------------------------------------------------------------------------------------------------\r\n\r\nexport const noteCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTE_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case NOTE_CREATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case NOTE_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// -------------------------------------------------------------------------------------------------\r\n\r\nexport const noteUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTE_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case NOTE_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case NOTE_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// -------------------------------------------------------------------------------------------------\r\n\r\nexport const noteDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTE_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case NOTE_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case NOTE_DELETE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport './index.css';\nimport './bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}